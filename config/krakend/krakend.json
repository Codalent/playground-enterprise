{
  "name": "KrakenD Enterprise API Gateway",
  "version": 2,
  "host": [
    "http://fake_api:8080"
  ],
  "port": 8080,
  "plugin": {
    "pattern": ".so",
    "folder": "/opt/krakend/plugins/"
  },
  "endpoints": [
    {
      "@comment": "Feature: Aggregation & Transformation",
      "endpoint": "/git/{user}",
      "backend": [
        {
          "host": [
            "https://api.github.com"
          ],
          "url_pattern": "/users/{user}",
          "allow": [
            "avatar_url",
            "name",
            "company",
            "blog",
            "location",
            "mail",
            "hireable",
            "followers",
            "public_repos",
            "public_gists"
          ],
          "mapping": {
            "blog": "website"
          },
          "group": "user"
        },
        {
          "host": [
            "https://api.github.com"
          ],
          "url_pattern": "/users/{user}/repos",
          "mapping": {
            "collection": "repos"
          },
          "is_collection": true
        }
      ],
      "extra_config": {
        "github_com/devopsfaith/krakend-swagger": {
          "summary": "Merges two calls from github and serves under a single endpoint",
          "description": "This endpoint fetches in parallel the user information and the repository information from Githuib and returns it together. Non interesting fields are removed.",
          "tags": [
            "Aggregation"
          ]
        }
      }
    },
    {
      "@comment": "Feature: Aggregation & Transformation with collections",
      "endpoint": "/cryptos/{currency}",
      "backend": [
        {
          "host": [
            "https://api.coingecko.com"
          ],
          "url_pattern": "/api/v3/coins/markets?vs_currency={currency}&ids=bitcoin%2Cethereum&order=market_cap_desc&per_page=100&page=1&sparkline=false",
          "encoding": "safejson",
          "extra_config": {
            "github.com/devopsfaith/krakend/proxy": {
              "flatmap_filter": [
                {
                  "type": "move",
                  "args": [
                    "collection",
                    "coins"
                  ]
                },
                {
                  "type": "del",
                  "args": [
                    "coins.*.ath_change_percentage",
                    "coins.*.ath_date",
                    "coins.*.atl",
                    "coins.*.atl_change_percentage",
                    "coins.*.atl_date",
                    "coins.*.circulating_supply",
                    "coins.*.fully_diluted_valuation",
                    "coins.*.high_24h",
                    "coins.*.fully_diluted_valuation",
                    "coins.*.low_24h",
                    "coins.*.market_cap_change_24h",
                    "coins.*.market_cap_change_percentage_24h",
                    "coins.*.market_cap_rank",
                    "coins.*.max_supply",
                    "coins.*.price_change_24h",
                    "coins.*.price_change_percentage_24h",
                    "coins.*.roi",
                    "coins.*.total_supply",
                    "coins.*.total_volume"
                  ]
                }
              ]
            }
          }
        },
        {
          "host": [
            "https://api.coingecko.com"
          ],
          "url_pattern": "/api/v3/global",
          "whitelist": [
            "total_market_cap.btc",
            "total_market_cap.eth",
            "total_volume.btc",
            "total_volume.eth",
            "market_cap_percentage.btc",
            "market_cap_percentage.eth",
            "updated_at"
          ],
          "target": "data",
          "group": "market"
        }
      ],
      "extra_config": {
        "github_com/devopsfaith/krakend-swagger": {
          "summary": "Get crypto capitalization data for a given currency",
          "description": "This endpoint fetches crypto capitalization data from Coingecko for a given currency.",
          "tags": [
            "Aggregation"
          ]
        }
      }
    },
    {
      "@comment": "Feature: Concurrent calls - Not enabled",
      "endpoint": "/market/simple",
      "backend": [
        {
          "host": [
            "https://api.coingecko.com"
          ],
          "url_pattern": "/api/v3/coins/markets?vs_currency=eur&ids=bitcoin%2Cethereum&order=market_cap_desc&per_page=100&page=1&sparkline=false",
          "encoding": "safejson",
          "mapping": {
            "collection": "coins"
          }
        }
      ],
      "extra_config": {
        "github_com/devopsfaith/krakend-swagger": {
          "summary": "Get crypto market information with a single call",
          "description": "This endpoint fetches crypto market information from Coingecko using a single non-concurrent call.",
          "tags": [
            "Concurrent calls"
          ]
        }
      }
    },
    {
      "@comment": "Feature: Concurrent calls - Enabled",
      "endpoint": "/market/concurrent",
      "concurrent_calls": 3,
      "backend": [
        {
          "host": [
            "https://api.coingecko.com"
          ],
          "url_pattern": "/api/v3/coins/markets?vs_currency=eur&ids=bitcoin%2Cethereum&order=market_cap_desc&per_page=100&page=1&sparkline=false",
          "encoding": "safejson",
          "mapping": {
            "collection": "coins"
          }
        }
      ],
      "extra_config": {
        "github_com/devopsfaith/krakend-swagger": {
          "summary": "Get crypto market information with 3 concurrent calls",
          "description": "This endpoint fetches crypto market information from Coingecko using 3 concurrent calls.",
          "tags": [
            "Concurrent calls"
          ]
        }
      }
    },
    {
      "@comment": "Feature: Expose a GET REST endpoint from POST to SOAP service",
      "endpoint": "/countries-list",
      "backend": [
        {
          "host": ["http://webservices.oorsprong.org"],
          "url_pattern": "/websamples.countryinfo/CountryInfoService.wso",
          "encoding": "xml",
          "method": "POST",
          "target": "Envelope.Body.ListOfLanguagesByNameResponse.ListOfLanguagesByNameResult",
          "mapping": {
            "tLanguage": "languages"
          },
          "extra_config": {
            "github.com/devopsfaith/krakend-martian": {
              "body.Modifier": {
                "scope": ["request"],
                "contentType": "text/xml; charset=utf-8",
                "@comment": "The body should be base64-encoded",
                "body": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPHNvYXA6RW52ZWxvcGUgeG1sbnM6c29hcD0iaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvc29hcC9lbnZlbG9wZS8iPgogIDxzb2FwOkJvZHk+CiAgICA8TGlzdE9mTGFuZ3VhZ2VzQnlOYW1lIHhtbG5zPSJodHRwOi8vd3d3Lm9vcnNwcm9uZy5vcmcvd2Vic2FtcGxlcy5jb3VudHJ5aW5mbyI+CiAgICA8L0xpc3RPZkxhbmd1YWdlc0J5TmFtZT4KICA8L3NvYXA6Qm9keT4KPC9zb2FwOkVudmVsb3BlPg=="
              }
            }
          }
        }
      ]
    },
    {
      "@comment": "Feature: Wildcard to our fake API, open",
      "endpoint": "/__wildcard/fake-api",
      "headers_to_pass": [
        "X-Krakend-Wildcard"
      ],
      "backend": [
        {
          "url_pattern": "/",
          "extra_config": {
            "github.com/devopsfaith/krakend/transport/http/client/executor": {
              "name": "krakend-wildcard"
            }
          }
        }
      ],
      "extra_config": {
        "github_com/devopsfaith/krakend-swagger": {
          "summary": "Calls to internal service with wildcard",
          "description": "This endpoint will send all requests to a designed backend including everything after the /fake-api path",
          "tags": [
            "Wildcard"
          ]
        }
      }
    },
    {
      "@comment": "Feature: Wildcard to our fake API, protected with Basic Auth",
      "endpoint": "/__wildcard/fake-api-auth",
      "headers_to_pass": [
        "X-Krakend-Wildcard"
      ],
      "backend": [
        {
          "url_pattern": "/",
          "extra_config": {
            "github.com/devopsfaith/krakend/transport/http/client/executor": {
              "name": "krakend-wildcard"
            }
          }
        }
      ],
      "extra_config": {
        "github_com/devopsfaith/krakend-swagger": {
          "summary": "Calls to internal service with wildcard, adding auth",
          "description": "This endpoint will send all requests to a designed backend including everything after the /fake-api-auth path, adding Basic Authentication",
          "tags": [
            "Wildcard"
          ]
        }
      }
    },
    {
      "@comment": "Feature: Wildcard with geofencing - Allow visits only from Spain",
      "endpoint": "/__wildcard/fake-api-geofence",
      "headers_to_pass": [
        "X-Krakend-Wildcard",
        "X-Geoip"
      ],
      "backend": [
        {
          "url_pattern": "/",
          "extra_config": {
            "github.com/devopsfaith/krakend/transport/http/client/executor": {
              "name": "krakend-wildcard"
            }
          }
        }
      ],
      "extra_config": {
        "github.com/devopsfaith/krakend-cel": [
          {
            "check_expr": "req_headers['X-Geoip'][0].matches('\"IsoCode\":\"ES\"')"
          }
        ],
        "github_com/devopsfaith/krakend-swagger": {
          "summary": "Calls to internal service with wildcard, using geofencing",
          "description": "This endpoint will send all requests to a designed backend including everything after the /fake-api-geofence path, adding geofencing (allowing calls only from Spain)",
          "tags": [
            "Wildcard"
          ]
        }
      }
    },
    {
      "@comment": "Feature: Authorization based on JWT with Auth0",
      "endpoint": "/private/auth0",
      "backend": [
        {
          "url_pattern": "/user/1.json"
        }
      ],
      "extra_config": {
        "github.com/devopsfaith/krakend-jose/validator": {
          "alg": "RS256",
          "audience": [
            "http://api.example.com"
          ],
          "roles_key": "http://api.example.com/custom/roles",
          "roles": [
            "user",
            "admin"
          ],
          "jwk-url": "https://albert-test.auth0.com/.well-known/jwks.json"
        },
        "github_com/devopsfaith/krakend-swagger": {
          "summary": "Some information behind JWT authentication protection (Auth0)",
          "description": "This endpoint uses JWT authentication with Auth0",
          "tags": [
            "Authentication"
          ]
        }
      }
    },
    {
      "@comment": "Feature: Authorization based on JWT with custom implementation",
      "endpoint": "/private/custom",
      "backend": [
        {
          "url_pattern": "/user/1.json"
        }
      ],
      "extra_config": {
        "github.com/devopsfaith/krakend-jose/validator": {
          "alg": "HS256",
          "audience": ["http://api.example.com"],
          "roles_key": "roles",
          "issuer": "https://krakend.io",
          "roles": ["role_a", "role_c"],
          "jwk-url": "http://fake_api:8080/jwk/symmetric.json",
          "disable_jwk_security": true
        },
        "github_com/devopsfaith/krakend-swagger": {
          "summary": "Some information behind JWT authentication protection (Custom)",
          "description": "This endpoint uses JWT authentication with a custom implementation",
          "tags": [
            "Authentication"
          ]
        }
      }
    },
    {
      "@comment": "Feature: Token generation for custom implementation of authentication",
      "endpoint": "/token",
      "backend": [
        {
          "url_pattern": "/token.json"
        }
      ],
      "extra_config": {
        "github.com/devopsfaith/krakend-jose/signer": {
          "alg": "HS256",
          "kid": "sim2",
          "keys-to-sign": ["access_token", "refresh_token"],
          "jwk-url": "http://fake_api:8080/jwk/symmetric.json",
          "disable_jwk_security": true
        },
        "github_com/devopsfaith/krakend-swagger": {
          "summary": "Token generation for jwt authentication custom implementation",
          "description": "This endpoint uses generates a token for jwt authentication custom implementation",
          "tags": [
            "Authentication"
          ]
        }
      }
    },
    {
      "@comment": "Feature: Authorization based on API Keys",
      "endpoint": "/api-key",
      "backend": [
        {
          "url_pattern": "/__debug/admin",
          "host": [
            "http://localhost:8080"
          ]
        }
      ],
      "extra_config": {
        "github_com/devopsfaith/krakend-apikeys": {
          "roles": [
            "admin"
          ]
        },
        "github_com/devopsfaith/krakend-swagger": {
          "summary": "Some information behind API-Keys authentication protection",
          "description": "This endpoint uses API-Key authentication",
          "tags": [
            "Authentication"
          ]
        }
      }
    },
    {
      "@comment": "Feature: Only POST method allowed",
      "endpoint": "/post",
      "method": "POST",
      "backend": [
        {
          "url_pattern": "/__debug/post"
        }
      ]
    },
    {
      "@comment": "Feature: Mocked response",
      "endpoint": "/mocked-response",
      "method": "GET",
      "output_encoding": "json",
      "backend": [{"host": ["http://unexistent_backend"], "url_pattern": "/"}],
      "extra_config": {
        "github.com/devopsfaith/krakend/proxy": {
          "static": {
            "data": {
              "an_integer": 123,
              "an_array": [
                "arr1",
                "arr2"
              ],
              "an_object": {
                "obj": "obj1"
              }
            }
          ,
            "strategy": "always"
          }
        }
      }
    },
    {
      "endpoint": "/no-params",
      "backend": [
        {
          "host": [
            "http://localhost:8080"
          ],
          "url_pattern": "/__debug/no-params"
        }
      ]
    },
    {
      "endpoint": "/query-params",
      "querystring_params": [
        "a",
        "b"
      ],
      "backend": [
        {
          "host": [
            "http://localhost:8080"
          ],
          "url_pattern": "/__debug/query-params"
        }
      ]
    },
    {
      "endpoint": "/url-params/{param}",
      "backend": [
        {
          "host": [
            "http://localhost:8080"
          ],
          "url_pattern": "/__debug/url-params?p={param}"
        }
      ]
    },
    {
      "endpoint": "/mix-params/{param}",
      "querystring_params": [
        "a",
        "b"
      ],
      "backend": [
        {
          "host": [
            "http://localhost:8080"
          ],
          "url_pattern": "/__debug/mix-params?p={param}"
        }
      ]
    }
  ],
  "extra_config": {
    "github_com/devopsfaith/krakend/transport/http/server/handler": {
      "name": [
        "krakend-static-live",
        "krakend-basic-auth",
        "krakend-wildcard",
        "krakend-geoip",
        "url-rewrite"
      ],
      "krakend-static-live": {
        "prefix": "/demo/",
        "path": "/etc/krakend/demo/"
      },
      "krakend-basic-auth": {
        "htpasswd_path": "/etc/krakend/.htpasswd",
        "endpoints": [
          "/__wildcard/fake-api-auth"
        ]
      },
      "krakend-wildcard": {
        "endpoints": {
          "/__wildcard/fake-api": [
            "/fake-api"
          ],
          "/__wildcard/fake-api-auth": [
            "/fake-api-auth"
          ],
          "/__wildcard/fake-api-geofence": [
            "/fake-api-geofence"
          ]
        }
      },
      "krakend-geoip": {
        "citydb_path": "/etc/krakend/geoip/GeoLite2-City.mmdb"
      },
      "url-rewrite": {
        "literal": {
          "/git-profile": "/git"
        },
        "regexp": [
          [
            "/git-profile/([a-z]{3})",
            "/git/${1}"
          ],
          [
            "/crypto-profile/([a-z]{3})",
            "/cryptos/${1}"
          ]
        ]
      }
    },
    "github_com/devopsfaith/krakend-swagger": {
      "fraction": 1,
      "version": "1",
      "contact-name": "John Doe",
      "contact-email": "contact@example.com",
      "license-name": "MIT",
      "license-url": "https://opensource.org/licenses/MIT"
    },
    "github_com/devopsfaith/krakend-cors": {
      "allow_origins": [
        "*"
      ],
      "allow_methods": [
        "POST",
        "GET"
      ],
      "allow_headers": [
        "Origin",
        "Authorization",
        "Content-Type"
      ],
      "expose_headers": [
        "Content-Length"
      ],
      "max_age": "12h"
    },
    "github_com/devopsfaith/krakend-gelf": {
      "address": "logstash:12201"
    },
    "github_com/devopsfaith/krakend-gologging": {
      "level": "DEBUG",
      "prefix": "[KRAKEND]",
      "syslog": false,
      "stdout": true
    },
    "github_com/devopsfaith/krakend-metrics": {
      "collection_time": "60s",
      "listen_address": ":8090"
    },
    "github_com/letgoapp/krakend-influx": {
      "address": "http://influxdb:8086",
      "ttl": "25s",
      "buffer_size": 0,
      "username": "krakend-dev",
      "password": "pas5w0rd"
    },
    "github_com/devopsfaith/krakend-opencensus": {
      "sample_rate": 100,
      "reporting_period": 1,
      "enabled_layers": {
        "backend": true,
        "router": true
      },
      "exporters": {
        "jaeger": {
          "endpoint": "http://jaeger:14268/api/traces",
          "serviceName": "krakend"
        }
      }
    },
    "github_com/devopsfaith/krakend-apikeys": {
      "keys": [
        {
          "key": "4d2c61e1-34c4-e96c-9456-15bd983c5019",
          "roles": [
            "role1",
            "role2"
          ],
          "@description": "ACME Inc."
        },
        {
          "key": "58427514-be32-0b52-b7c6-d01fada30497",
          "roles": [
            "admin",
            "user"
          ],
          "@description": "Administrators Inc."
        }
      ]
    },
    "github_com/devopsfaith/bloomfilter": {
      "N": 10000000,
      "P": 0.0000001,
      "HashName": "optimal",
      "TTL": 1500,
      "port": 1234,
      "TokenKeys": ["jti"]
    }
  }
}
